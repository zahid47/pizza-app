{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Pizza App API",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "paths": {
    "/healthcheck": {
      "get": {
        "summary": "server healthcheck",
        "operationId": "healthcheck",
        "tags": ["healthcheck"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The server is healthy"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "operationId": "login",
        "tags": ["auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of all orders by the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string",
                      "enum": ["admin", "user"]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get currently logged in user",
        "operationId": "me",
        "tags": ["auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "johndoe@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "phone": {
                    "type": "string",
                    "example": "123456789"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "addressLine": {
                        "type": "string",
                        "example": "123 Main St"
                      },
                      "city": {
                        "type": "string",
                        "example": "Anytown"
                      },
                      "state": {
                        "type": "string",
                        "example": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "example": "12345"
                      },
                      "country": {
                        "type": "string",
                        "example": "USA"
                      },
                      "comment": {
                        "type": "string",
                        "example": "Next to the bus stop"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "operationId": "getUsers",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of users returned",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/orders": {
      "get": {
        "summary": "Get all orders by user",
        "operationId": "getOrdersByUser",
        "tags": ["user", "order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of all orders by the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Get user by id",
        "operationId": "getUserById",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62c867a54e30692fef1763d0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User with that id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update user by id",
        "operationId": "updateUserById",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62c867a54e30692fef1763d0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe Pro Max"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete user by id",
        "operationId": "deleteUserById",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62c867a54e30692fef1763d0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/order": {
      "post": {
        "summary": "Create a new order",
        "operationId": "createOrder",
        "tags": ["order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["products", "payment", "total"],
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "variant": {
                          "type": "string"
                        }
                      }
                    },
                    "example": [
                      {
                        "product": "62ce641161744def3b40725a",
                        "variant": "small",
                        "quantity": 1
                      },
                      {
                        "product": "62ce643161744def3b407264",
                        "variant": "small",
                        "quantity": 2
                      }
                    ]
                  },
                  "payment": {
                    "type": "object",
                    "properties": {
                      "paymentStatus": {
                        "type": "string",
                        "enum": ["paid", "unpaid"]
                      },
                      "method": {
                        "type": "string",
                        "enum": ["cash", "card"]
                      }
                    },
                    "required": ["method"],
                    "example": {
                      "method": "cash"
                    }
                  },
                  "total": {
                    "type": "number",
                    "example": 900
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all orders",
        "operationId": "getOrders",
        "tags": ["order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of orders returned",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of all orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "summary": "Get order by id",
        "operationId": "getOrderById",
        "tags": ["order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Order id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62e492469e0590874991aacc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order with that id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update order by id",
        "operationId": "updateOrderById",
        "tags": ["order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Order id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62e492469e0590874991aacc"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["cash", "card"]
                      }
                    },
                    "example": {
                      "payment": {
                        "method": "card"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete order by id",
        "operationId": "deleteOrderById",
        "tags": ["order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Order id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62e492469e0590874991aacc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/product": {
      "post": {
        "summary": "Create a new product",
        "operationId": "createProduct",
        "tags": ["product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "hawaian pizza"
                  },
                  "description": {
                    "type": "string",
                    "example": "exotic hawaian pizza"
                  },
                  "category": {
                    "type": "string",
                    "example": "exotic"
                  },
                  "isVegan": {
                    "type": "string",
                    "example": "false"
                  },
                  "prices": {
                    "type": "string",
                    "example": "[{\"price\": 10,\"option\": \"small\"},{\"price\": 15,\"option\": \"large\"}]"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all products",
        "operationId": "getProducts",
        "tags": ["product"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of products returned",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "filter by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isVegan",
            "in": "query",
            "description": "filter by isVegan",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "filter by category",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of all products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/product/{productId}": {
      "get": {
        "summary": "Get product by id",
        "operationId": "getProductById",
        "tags": ["product"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62ce645c61744def3b407278"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product with that id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update product by id",
        "operationId": "updateOrderById",
        "tags": ["product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62ce645c61744def3b407278"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Pizza"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete product by id",
        "operationId": "deleteOrderById",
        "tags": ["product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "62ce645c61744def3b407278"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "addressLine": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "comment": {
                "type": "string"
              }
            }
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"]
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "type": "string"
          },
          "isVegan": {
            "type": "boolean"
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "number"
                },
                "option": {
                  "type": "string"
                }
              }
            }
          },
          "extraIngredients": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "variant": {
                  "type": "string"
                }
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "paymentStatus": {
                "type": "string",
                "enum": ["paid", "unpaid"]
              },
              "method": {
                "type": "string",
                "enum": ["cash", "card"]
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "cooking",
              "on the way",
              "delivered",
              "cancelled"
            ]
          },
          "total": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
